LEETCODE :
https://leetcode.com/problems/sqrtx/

APPROACH 1 : Returning answer.

class Solution {
public:
    int mySqrt(int x) {
        if(x==0 || x==1) return x;

        int low=1,high=x,ans;
        long long mid;
        while(low<=high){
            mid=low+(high-low)/2;

            if(mid*mid==x) return mid;

            if(mid*mid>x) high=mid-1;
            else if(mid*mid<x) {
               ans=mid;
               low=mid+1;
            }

        }
        return ans;
    }
};


APPROACH 2: Returning high/end index:

class Solution {
public:
    int mySqrt(int x) {
        if(x==0 || x==1) return x;

        int low=1,high=x;
        long long mid;
        while(low<=high){
            mid=low+(high-low)/2;

            if(mid*mid==x) return mid;

            if(mid*mid>x) high=mid-1;
            else if(mid*mid<x)  low=mid+1;
            

        }
        return high;
    }
};

