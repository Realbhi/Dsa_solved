CODING NINJA:
https://www.codingninjas.com/studio/problems/maximum-size-rectangle-sub-matrix-with-all-1-s_893017




#include<stack>
#include<climits>
vector<int> findnextsmaller(vector<int> arr,int n)
{

      vector<int> next(n);
      stack<int> st;
      st.push(-1);

      for(int i=n-1;i>=0;i--){

          int curr=arr[i];
          while(st.top()!=-1 && arr[st.top()]>=curr){
              st.pop();
          }

          next[i]=st.top();
          st.push(i);
      }

      return next;

}


vector<int> findprevsmaller(vector<int> arr,int n)
{

      vector<int> next(n);
      stack<int> st;
      st.push(-1);

      for(int i=0;i<n;i++){

          int curr=arr[i];
          while(st.top()!=-1 && arr[st.top()]>=curr){
              st.pop();
          }

          next[i]=st.top();
          st.push(i);
      }

      return next;

}

int largestRectangleArea(vector<int>& heights,int len) {
        
        // int len=heights.size();

        vector<int> nextsmall(len);
        nextsmall=findnextsmaller(heights,len);


        vector<int> prevsmall(len);
        prevsmall=findprevsmaller(heights,len);


        int area,l,b,maxarea=INT_MIN;
        for(int i=0;i<len;i++){
            
            l=heights[i];

            if(nextsmall[i]==-1){
                nextsmall[i]=len;
            }

            b=nextsmall[i]-prevsmall[i]-1;

            area=l*b;

            maxarea=max(maxarea,area);
        }

        return maxarea;

    }


int maximalAreaOfSubMatrixOfAll1(vector<vector<int>> &mat, int n, int m){
	// Write your code here.

	int area=largestRectangleArea(mat[0],m);
	for(int i=1;i<n;i++){
		for(int j=0;j<m;j++){

            if(mat[i][j]!=0)
			  mat[i][j]=mat[i][j]+mat[i-1][j];

			else 
			  mat[i][j]=0;

		}

		area=max(area,largestRectangleArea(mat[i],m));

	}

	return area;

}
