LEETCODE:
https://leetcode.com/problems/reverse-nodes-in-k-group/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        

       ListNode* curr1=head;
       for(int i=0;i<k;i++){

       if(curr1==NULL)
          return head; 

        curr1=curr1->next;
       }

        ListNode* curr=head;
        ListNode* prev=NULL;
         ListNode* forward=NULL;
        int count=0;

        // reverse k group
        while(curr!=NULL && count<k){
            forward=curr->next;
            curr->next=prev;
            prev=curr;
            curr=forward;
            count++;
        }


        if(forward!=NULL){
            head->next=reverseKGroup(forward,k);
        }


        return prev;

    }
};
